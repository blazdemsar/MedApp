(window.webpackJsonp=window.webpackJsonp||[]).push([[9],{40:function(e,t,n){"use strict";n.d(t,"g",function(){return o}),n.d(t,"h",function(){return c}),n.d(t,"a",function(){return a}),n.d(t,"b",function(){return i}),n.d(t,"c",function(){return l}),n.d(t,"d",function(){return s}),n.d(t,"e",function(){return u}),n.d(t,"f",function(){return p});var r=n(8),o=function(t){return console.log("Logging in the admin..."),function(o,e){console.log("called by thunk"),window.fetch("http://localhost:9090/api/loginAdmin",{method:"POST",headers:{Accept:"application/json","Content-Type":"application/json"},body:JSON.stringify(t)}).then(function(e){return e.json()}).then(function(e){console.log("response ",e);var t,n=(t=e,{type:r.a,payload:{admin:t}});o(n)}).catch(function(e){console.log("Error While Loggin In...",e)})}},c=function(t){return console.log("Registering Admin ",t),function(e){window.fetch("http://localhost:9090/api/registerAdmin",{method:"POST",headers:{Accept:"application/json","Content-Type":"application/json"},body:JSON.stringify(t)}).then(function(e){return e.json()}).then(function(e){console.log("response ",e)}).catch(function(e){console.log("Error While Registering",e)})}},a=function(t){return console.log("Creating Doctor ",t),function(e){window.fetch("http://localhost:9090/api/createDoctor",{method:"POST",headers:{Accept:"application/json","Content-Type":"application/json"},body:JSON.stringify(t)}).then(function(e){return e.json()}).then(function(e){console.log("response ",e)}).catch(function(e){console.log("Error While Creating A Doctor",e)})}},i=function(t){return console.log("Creating Patient ",t),function(e){window.fetch("http://localhost:9090/api/createPatient",{method:"POST",headers:{Accept:"application/json","Content-Type":"application/json"},body:JSON.stringify(t)}).then(function(e){return e.json()}).then(function(e){console.log("response ",e)}).catch(function(e){console.log("Error While Creating A Patient",e)})}},l=function(t){return console.log("Creating Record ",t),function(e){window.fetch("http://localhost:9090/api/createRecord",{method:"POST",headers:{Accept:"application/json","Content-Type":"application/json"},body:JSON.stringify(t)}).then(function(e){return e.json()}).then(function(e){console.log("response ",e)}).catch(function(e){console.log("Error While Creating A Record",e)})}},s=function(){return{type:r.d,payload:{promise:new Promise(function(t,n){fetch("http://localhost:9090/api/getDoctors",{method:"GET"}).then(function(e){return e.json()},function(e){return console.log("An error occurred.",e)}).then(function(e){t(e)}).catch(function(e){n(e)})})}}},u=function(){return{type:r.f,payload:{promise:new Promise(function(t,n){fetch("http://localhost:9090/api/getPatients",{method:"GET"}).then(function(e){return e.json()},function(e){return console.log("An error occurred.",e)}).then(function(e){t(e)}).catch(function(e){n(e)})})}}},p=function(){return{type:r.h,payload:{promise:new Promise(function(t,n){fetch("http://localhost:9090/api/getRecords",{method:"GET"}).then(function(e){return e.json()},function(e){return console.log("An error occurred.",e)}).then(function(e){t(e)}).catch(function(e){n(e)})})}}}},43:function(e,t,n){"use strict";n.r(t);var o=n(19),r=n(0),a=n.n(r);function i(e){return(i="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e})(e)}function l(e,t){for(var n=0;n<t.length;n++){var o=t[n];o.enumerable=o.enumerable||!1,o.configurable=!0,"value"in o&&(o.writable=!0),Object.defineProperty(e,o.key,o)}}function s(e,t){return(s=Object.setPrototypeOf||function(e,t){return e.__proto__=t,e})(e,t)}function u(c){var a=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Date.prototype.toString.call(Reflect.construct(Date,[],function(){})),!0}catch(e){return!1}}();return function(){var e,t,n,o,r=f(c);return t=a?(e=f(this).constructor,Reflect.construct(r,arguments,e)):r.apply(this,arguments),n=this,!(o=t)||"object"!==i(o)&&"function"!=typeof o?p(n):o}}function p(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}function f(e){return(f=Object.setPrototypeOf?Object.getPrototypeOf:function(e){return e.__proto__||Object.getPrototypeOf(e)})(e)}function d(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}var c=function(){!function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),t&&s(e,t)}(c,r["Component"]);var e,t,n,o=u(c);function c(e,t){var r;return function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,c),d(p(r=o.call(this,e,t)),"onChangeText",function(e){var t=e.target,n=t.classList.toString(),o=t.value;0<=n.indexOf("recordId")?r.setState({recordId:o}):0<=n.indexOf("patient")?
//!= "Select"
r.setState({patient:o}):0<=n.indexOf("doctor")?r.setState({doctor:t.value}):0<=n.indexOf("admission")?r.setState({admission:t.value}):0<=n.indexOf("diagnosis")&&r.setState({diagnosis:t.value})}),d(p(r),"CreateRecord",function(){console.log(r.state),r.props.createRecord(r.state)}),r.state={recordId:"",patient:{},doctor:{},addmission:"",diagnosis:""},r}return e=c,(t=[{key:"componentDidMount",value:function(){console.log("Hello"),this.props.getPatients(),this.props.getDoctors()}},{key:"componentWillReceiveProps",value:function(e){console.log("next props",e),this.setState({recordId:e.record.recordId,patient:e.record.patient,doctor:e.record.doctor,admission:e.record.admission,diagnosis:e.record.diagnosis})}},{key:"render",value:function(){var e=this.props.patients,t=this.props.doctors;console.log(e),console.log(t);var n=0<t.length&&t.map(function(e,t){return a.a.createElement("option",{className:"option",value:JSON.stringify(e)},e.doctorId," : ",e.name," ",e.lastName)},this);console.log(n);var o=0<e.length&&e.map(function(e,t){return a.a.createElement("option",{className:"option",value:JSON.stringify(e)},e.patientId," : ",e.name," ",e.lastName)},this);return console.log(n),a.a.createElement("div",{className:"container"},a.a.createElement("div",{className:"col-lg-12"},a.a.createElement("div",{className:"col-md-12"},a.a.createElement("div",{className:"form-group"},a.a.createElement("b",null,"Record ID"),a.a.createElement("br",null),a.a.createElement("input",{type:"number",className:"form-control recordId",value:this.state.recordId,placeholder:"Record ID",onChange:this.onChangeText})),a.a.createElement("div",{className:"form-group"},a.a.createElement("b",null,"Select A Patient"),a.a.createElement("br",null),a.a.createElement("select",{type:"text",className:"form-control patient",placeholder:"Select A Patient",onChange:this.onChangeText},a.a.createElement("option",{className:"option",value:"Select"},"Select A Patient"),o)),a.a.createElement("div",{className:"form-group"},a.a.createElement("b",null,"Select A Doctor"),a.a.createElement("br",null),a.a.createElement("select",{type:"text",className:"form-control doctor",placeholder:"Select A Patient",onChange:this.onChangeText},a.a.createElement("option",{className:"option",value:"Select"},"Select A Doctor"),n)),a.a.createElement("div",{className:"form-group"},a.a.createElement("b",null,"Admission"),a.a.createElement("br",null),a.a.createElement("select",{type:"text",className:"form-control admission",placeholder:"Admission",onChange:this.onChangeText},a.a.createElement("option",{className:"option",value:"Yes"},"Yes"),a.a.createElement("option",{className:"option",value:"No"},"No"))),a.a.createElement("div",{className:"form-group"},a.a.createElement("b",null,"Diagnosis"),a.a.createElement("br",null),a.a.createElement("textarea",{type:"text",className:"form-control diagnosis",value:this.state.diagnosis,placeholder:"Diagnosis",onChange:this.onChangeText})),a.a.createElement("hr",null),a.a.createElement("input",{type:"button",className:"btn btn-danger",value:"Create",onClick:this.CreateRecord}),a.a.createElement("br",null),a.a.createElement("label",null))))}}])&&l(e.prototype,t),n&&l(e,n),c}(),h=n(40);t.default=Object(o.b)(function(e){return{record:e.record.record,doctors:e.doctor.doctors,patients:e.patient.patients}},function(t){return{createRecord:function(e){t(Object(h.c)(e))},getDoctors:function(){t(Object(h.d)())},getPatients:function(){t(Object(h.e)())}}})(c)}}]);